{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass StatsComponent {\n  constructor() {\n    this.allCards = {\n      count: 0,\n      data: [],\n      page: 0,\n      pageSize: 0,\n      totalCount: 0\n    };\n    this.decks = [];\n    this.numberOfCardsSelected = 0;\n  }\n  ngOnInit() {\n    this.countOfSelectedCards();\n  }\n  countOfSelectedCards() {\n    this.decks.forEach(deck => {\n      this.numberOfCardsSelected += deck.cards.length;\n    });\n  }\n  static #_ = this.ɵfac = function StatsComponent_Factory(t) {\n    return new (t || StatsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatsComponent,\n    selectors: [[\"app-stats\"]],\n    inputs: {\n      allCards: \"allCards\",\n      decks: \"decks\"\n    },\n    decls: 25,\n    vars: 3,\n    consts: [[1, \"grid\", \"space-x-1\", \"lg:grid-cols-6\", \"p-4\", \"gap-2\"], [1, \"bg-white\", \"border-2\", \"border-gray-400\", \"rounded\"], [1, \"bg-white\"], [1, \"px-6\", \"py-4\"], [1, \"font-bold\", \"text-xl\", \"mb-2\"], [1, \"text-gray-700\", \"text-sm\"], [1, \"font-bold\"]],\n    template: function StatsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5, \"Number of Cards\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5)(7, \"span\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"div\", 2)(11, \"div\", 3)(12, \"div\", 4);\n        i0.ɵɵtext(13, \"Number of Decks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"p\", 5)(15, \"span\", 6);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(17, \"div\", 1)(18, \"div\", 2)(19, \"div\", 3)(20, \"div\", 4);\n        i0.ɵɵtext(21, \"Number of Cards Selected\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"p\", 5)(23, \"span\", 6);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.allCards.count, \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.decks.length, \" \");\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.numberOfCardsSelected, \" \");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzdGF0cy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdGF0cy9zdGF0cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { StatsComponent };","map":{"version":3,"names":["StatsComponent","constructor","allCards","count","data","page","pageSize","totalCount","decks","numberOfCardsSelected","ngOnInit","countOfSelectedCards","forEach","deck","cards","length","_","_2","selectors","inputs","decls","vars","consts","template","StatsComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\stats\\stats.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\stats\\stats.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { ICard } from 'src/app/interfaces/Icard';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.scss']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n\r\n  @Input() allCards: ICard = {\r\n    count: 0,\r\n    data: [],\r\n    page: 0,\r\n    pageSize: 0,\r\n    totalCount: 0\r\n  };\r\n\r\n  @Input() decks: Array<Ideck> = [];\r\n\r\n  public numberOfCardsSelected: number = 0;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.countOfSelectedCards();\r\n  }\r\n\r\n  countOfSelectedCards() {\r\n    this.decks.forEach((deck: Ideck) => {\r\n      this.numberOfCardsSelected += deck.cards.length;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"grid space-x-1 lg:grid-cols-6 p-4 gap-2\">\r\n  <div class=\"bg-white border-2 border-gray-400 rounded\">\r\n    <div class=\"bg-white\">\r\n      <div class=\"px-6 py-4\">\r\n        <div class=\"font-bold text-xl mb-2\">Number of Cards</div>\r\n        <p class=\"text-gray-700 text-sm\">\r\n          <span class=\"font-bold\">\r\n            {{ allCards.count }}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bg-white border-2 border-gray-400 rounded\">\r\n    <div class=\"bg-white\">\r\n      <div class=\"px-6 py-4\">\r\n        <div class=\"font-bold text-xl mb-2\">Number of Decks</div>\r\n        <p class=\"text-gray-700 text-sm\">\r\n          <span class=\"font-bold\">\r\n            {{ decks.length }}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"bg-white border-2 border-gray-400 rounded\">\r\n    <div class=\"bg-white\">\r\n      <div class=\"px-6 py-4\">\r\n        <div class=\"font-bold text-xl mb-2\">Number of Cards Selected</div>\r\n        <p class=\"text-gray-700 text-sm\">\r\n          <span class=\"font-bold\">\r\n            {{ numberOfCardsSelected }}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":";AAIA,MAKaA,cAAc;EAczBC,YAAA;IAZS,KAAAC,QAAQ,GAAU;MACzBC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE;KACb;IAEQ,KAAAC,KAAK,GAAiB,EAAE;IAE1B,KAAAC,qBAAqB,GAAW,CAAC;EAEzB;EAEfC,QAAQA,CAAA;IACN,IAAI,CAACC,oBAAoB,EAAE;EAC7B;EAEAA,oBAAoBA,CAAA;IAClB,IAAI,CAACH,KAAK,CAACI,OAAO,CAAEC,IAAW,IAAI;MACjC,IAAI,CAACJ,qBAAqB,IAAII,IAAI,CAACC,KAAK,CAACC,MAAM;IACjD,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAxBUhB,cAAc;EAAA;EAAA,QAAAiB,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,MAAA;MAAAjB,QAAA;MAAAM,KAAA;IAAA;IAAAY,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT3BE,EAAA,CAAAC,cAAA,aAAqD;QAITD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAM;QACzDH,EAAA,CAAAC,cAAA,WAAiC;QAE7BD,EAAA,CAAAE,MAAA,GACF;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAKfH,EAAA,CAAAC,cAAA,aAAuD;QAGbD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAM;QACzDH,EAAA,CAAAC,cAAA,YAAiC;QAE7BD,EAAA,CAAAE,MAAA,IACF;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAKfH,EAAA,CAAAC,cAAA,cAAuD;QAGbD,EAAA,CAAAE,MAAA,gCAAwB;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAClEH,EAAA,CAAAC,cAAA,YAAiC;QAE7BD,EAAA,CAAAE,MAAA,IACF;QAAAF,EAAA,CAAAG,YAAA,EAAO;;;QAzBLH,EAAA,CAAAI,SAAA,GACF;QADEJ,EAAA,CAAAK,kBAAA,MAAAN,GAAA,CAAAxB,QAAA,CAAAC,KAAA,MACF;QAWEwB,EAAA,CAAAI,SAAA,GACF;QADEJ,EAAA,CAAAK,kBAAA,MAAAN,GAAA,CAAAlB,KAAA,CAAAO,MAAA,MACF;QAWEY,EAAA,CAAAI,SAAA,GACF;QADEJ,EAAA,CAAAK,kBAAA,MAAAN,GAAA,CAAAjB,qBAAA,MACF;;;;;;SDvBGT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}