{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/components/cards/service/card.service\";\nimport * as i3 from \"../../components/header/header.component\";\nimport * as i4 from \"../../components/left-menu/leftmenu.component\";\nclass DashboardComponent {\n  constructor(router, $cardsService) {\n    this.router = router;\n    this.$cardsService = $cardsService;\n    this.cards = [];\n    this.routesApp = [{\n      id: 1,\n      route: \"/dashboard/deckofcards\",\n      active: false\n    }];\n    this.currentRoute = {\n      id: -1,\n      route: \"\",\n      active: false\n    };\n  }\n  ngOnInit() {\n    this.getCards();\n    this.checkRoute();\n  }\n  getCards() {\n    this.$cardsService.getAllCards().subscribe(response => {\n      this.cards = response.data;\n      this.$cardsService.allCards = this.cards;\n    });\n  }\n  checkRoute() {\n    this.currentRoute = this.routesApp.find(r => {\n      r.active = true;\n      return r.route === this.router.url;\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"flex\", \"w-screen\", \"h-screen\", \"text-gray-700\"], [1, \"flex\", \"flex-col\", \"flex-grow\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-leftmenu\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-header\")(4, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i1.RouterOutlet, i3.HeaderComponent, i4.LeftMenuComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["DashboardComponent","constructor","router","$cardsService","cards","routesApp","id","route","active","currentRoute","ngOnInit","getCards","checkRoute","getAllCards","subscribe","response","data","allCards","find","r","url","_","i0","ɵɵdirectiveInject","i1","Router","i2","CardService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from 'src/app/components/cards/service/card.service';\r\nimport { Data, ICard } from 'src/app/interfaces/Icard';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public cards: Array<Data> = [];\r\n\r\n  public routesApp: Array<any> = [\r\n    {\r\n      id: 1,\r\n      route: \"/dashboard/deckofcards\",\r\n      active: false\r\n    }\r\n  ];\r\n\r\n  public currentRoute: any = {\r\n      id: -1,\r\n      route: \"\",\r\n      active: false\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private $cardsService: CardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCards();\r\n    this.checkRoute();\r\n  }\r\n\r\n  getCards() {\r\n    this.$cardsService.getAllCards().subscribe((response: ICard) => {\r\n      this.cards = response.data;\r\n      this.$cardsService.allCards = this.cards;\r\n    });\r\n  }\r\n\r\n  checkRoute() {\r\n    this.currentRoute = this.routesApp.find((r: any) => {\r\n      r.active = true;\r\n      return r.route === this.router.url;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"flex w-screen h-screen text-gray-700\">\r\n  <app-leftmenu></app-leftmenu>\r\n  <div class=\"flex flex-col flex-grow\">\r\n      <app-header></app-header>\r\n      <!-- <app-deckofcards></app-deckofcards> -->\r\n      <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"],"mappings":";;;;;AAMA,MAKaA,kBAAkB;EAkB7BC,YACUC,MAAc,EACdC,aAA0B;IAD1B,KAAAD,MAAM,GAANA,MAAM;IACN,KAAAC,aAAa,GAAbA,aAAa;IAlBhB,KAAAC,KAAK,GAAgB,EAAE;IAEvB,KAAAC,SAAS,GAAe,CAC7B;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,wBAAwB;MAC/BC,MAAM,EAAE;KACT,CACF;IAEM,KAAAC,YAAY,GAAQ;MACvBH,EAAE,EAAE,CAAC,CAAC;MACNC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;KACX;EAKE;EAEHE,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAD,QAAQA,CAAA;IACN,IAAI,CAACR,aAAa,CAACU,WAAW,EAAE,CAACC,SAAS,CAAEC,QAAe,IAAI;MAC7D,IAAI,CAACX,KAAK,GAAGW,QAAQ,CAACC,IAAI;MAC1B,IAAI,CAACb,aAAa,CAACc,QAAQ,GAAG,IAAI,CAACb,KAAK;IAC1C,CAAC,CAAC;EACJ;EAEAQ,UAAUA,CAAA;IACR,IAAI,CAACH,YAAY,GAAG,IAAI,CAACJ,SAAS,CAACa,IAAI,CAAEC,CAAM,IAAI;MACjDA,CAAC,CAACX,MAAM,GAAG,IAAI;MACf,OAAOW,CAAC,CAACZ,KAAK,KAAK,IAAI,CAACL,MAAM,CAACkB,GAAG;IACpC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAxCUrB,kBAAkB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB5B,kBAAkB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX/Bb,EAAA,CAAAe,cAAA,aAAkD;QAChDf,EAAA,CAAAgB,SAAA,mBAA6B;QAC7BhB,EAAA,CAAAe,cAAA,aAAqC;QACjCf,EAAA,CAAAgB,SAAA,iBAAyB;QAG7BhB,EAAA,CAAAiB,YAAA,EAAM;;;;;;;SDKKvC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}