{"ast":null,"code":"import { DeckDetailsComponent } from '../deckdetails/deckdetails.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/card.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nfunction CardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\")(9, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.openDialog(card_r1.id));\n    });\n    i0.ɵɵelementStart(10, \"mat-icon\");\n    i0.ɵɵtext(11, \"search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.openDialog(card_r1.id));\n    });\n    i0.ɵɵelementStart(13, \"mat-icon\");\n    i0.ɵɵtext(14, \"create\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteCard(card_r1.id));\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"cancel\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", card_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Number of cards: \", card_r1.cards.length, \" \");\n  }\n}\nclass CardComponent {\n  constructor($cardsService, dialog) {\n    this.$cardsService = $cardsService;\n    this.dialog = dialog;\n    this.userEmail = \"\";\n    this.cards = [];\n  }\n  ngOnInit() {\n    this.getCards();\n  }\n  getCards() {\n    if (this.userEmail) {\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe(response => {\n        this.cards = response;\n      });\n    }\n  }\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DeckDetailsComponent);\n    let card = this.cards.find(c => {\n      return c.id === id;\n    });\n    dialogRef.componentInstance.deck = card;\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  deleteCard(id) {\n    this.$cardsService.deleteCardById(id).subscribe(response => {\n      this.cards = response;\n    });\n    this.getCards();\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.CardService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-cards\"]],\n    inputs: {\n      userEmail: \"userEmail\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"grid\", \"space-x-1\", \"lg:grid-cols-6\", \"p-4\", \"gap-2\"], [\"class\", \"bg-white border-2 border-gray-400 rounded\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-white\", \"border-2\", \"border-gray-400\", \"rounded\"], [1, \"bg-white\"], [\"src\", \"https://cdn.vox-cdn.com/thumbor/PqAwdNpc7p-5GUCSMxQPehSU-ck=/0x0:1920x1200/1200x800/filters:focal(810x375:1116x681)/cdn.vox-cdn.com/uploads/chorus_image/image/72524797/pikachu_artwork.0.jpg\", 1, \"w-full\", 3, \"alt\"], [1, \"px-6\", \"py-4\"], [1, \"font-bold\", \"text-xl\", \"mb-2\"], [1, \"text-gray-700\", \"text-base\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 1, \"mr-2\", 3, \"click\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, CardComponent_div_1_Template, 18, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.MatMiniFabButton, i5.MatIcon],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJkcy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jYXJkcy9jYXJkcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { CardComponent };","map":{"version":3,"names":["DeckDetailsComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","CardComponent_div_1_Template_button_click_9_listener","restoredCtx","ɵɵrestoreView","_r3","card_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","openDialog","id","CardComponent_div_1_Template_button_click_12_listener","ctx_r4","CardComponent_div_1_Template_button_click_15_listener","ctx_r5","deleteCard","ɵɵadvance","ɵɵpropertyInterpolate","name","ɵɵtextInterpolate","ɵɵtextInterpolate1","cards","length","CardComponent","constructor","$cardsService","dialog","userEmail","ngOnInit","getCards","getCardsByUser","subscribe","response","dialogRef","open","card","find","c","componentInstance","deck","afterClosed","result","deleteCardById","_","ɵɵdirectiveInject","i1","CardService","i2","MatDialog","_2","selectors","inputs","decls","vars","consts","template","CardComponent_Template","rf","ctx","ɵɵtemplate","CardComponent_div_1_Template","ɵɵproperty"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\cards\\cards.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\cards\\cards.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { CardService } from './service/card.service';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeckDetailsComponent } from '../deckdetails/deckdetails.component';\r\n\r\n@Component({\r\n  selector: 'app-cards',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input() userEmail: string = \"\";\r\n\r\n  public cards: Array<Ideck> = [];\r\n\r\n  constructor(\r\n    private $cardsService: CardService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCards();\r\n  }\r\n\r\n  getCards() {\r\n    if(this.userEmail) {\r\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe((response: Array<Ideck>) => {\r\n        this.cards = response;\r\n      });\r\n    }\r\n  }\r\n\r\n  openDialog(id: number) {\r\n    const dialogRef = this.dialog.open(DeckDetailsComponent);\r\n\r\n    let card = this.cards.find((c: Ideck) => {\r\n      return c.id === id;\r\n    });\r\n\r\n    dialogRef.componentInstance.deck = card!;\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n    });\r\n  }\r\n\r\n  deleteCard(id: number) {\r\n    this.$cardsService.deleteCardById(id).subscribe((response: any) => {\r\n      this.cards = response;\r\n    });\r\n    this.getCards();\r\n  }\r\n}\r\n","<div class=\"grid space-x-1 lg:grid-cols-6 p-4 gap-2\">\r\n  <div *ngFor=\"let card of cards\" class=\"bg-white border-2 border-gray-400 rounded\">\r\n    <div class=\"bg-white\">\r\n      <img class=\"w-full\" src=\"https://cdn.vox-cdn.com/thumbor/PqAwdNpc7p-5GUCSMxQPehSU-ck=/0x0:1920x1200/1200x800/filters:focal(810x375:1116x681)/cdn.vox-cdn.com/uploads/chorus_image/image/72524797/pikachu_artwork.0.jpg\" alt=\"{{card.name}}\">\r\n      <div class=\"px-6 py-4\">\r\n        <div class=\"font-bold text-xl mb-2\">{{card.name}}</div>\r\n        <p class=\"text-gray-700 text-base\">\r\n          Number of cards: {{card.cards.length}}\r\n        </p>\r\n        <p>\r\n          <button mat-mini-fab color=\"primary\" (click)=\"openDialog(card.id!)\" class=\"mr-2\">\r\n            <mat-icon>search</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab color=\"primary\" (click)=\"openDialog(card.id!)\" class=\"mr-2\">\r\n            <mat-icon>create</mat-icon>\r\n          </button>\r\n          <button mat-mini-fab color=\"warn\" (click)=\"deleteCard(card.id!)\">\r\n            <mat-icon>cancel</mat-icon>\r\n          </button>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}