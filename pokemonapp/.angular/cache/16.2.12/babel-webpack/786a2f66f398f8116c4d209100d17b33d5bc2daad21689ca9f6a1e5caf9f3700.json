{"ast":null,"code":"import { DeckDetailsComponent } from '../deckdetails/deck-details.component';\nimport { EditDeckFormComponent } from '../edit-deck-form/edit-deck-form.component';\nimport { SnackBarComponent } from '../snackBar/snack-bar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/card.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nfunction CardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 7);\n    i0.ɵɵtext(7, \" Number of cards: \");\n    i0.ɵɵelementStart(8, \"span\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"p\", 7);\n    i0.ɵɵtext(11, \" Number of Super Types: \");\n    i0.ɵɵelementStart(12, \"span\", 8);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"p\", 7);\n    i0.ɵɵtext(15, \" Number of Colors: \");\n    i0.ɵɵelementStart(16, \"span\", 8);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"p\")(19, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_19_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.viewDetails(card_r1));\n    });\n    i0.ɵɵelementStart(20, \"mat-icon\");\n    i0.ɵɵtext(21, \"search\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.editCard(card_r1));\n    });\n    i0.ɵɵelementStart(23, \"mat-icon\");\n    i0.ɵɵtext(24, \"create\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function CardComponent_div_1_Template_button_click_25_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const card_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteCard(card_r1.id));\n    });\n    i0.ɵɵelementStart(26, \"mat-icon\");\n    i0.ɵɵtext(27, \"cancel\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const card_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"alt\", card_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(card_r1.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", card_r1.cards.length, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.numberOfSuperTypes, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.numberOfColors, \" \");\n  }\n}\nlet CardComponent = /*#__PURE__*/(() => {\n  class CardComponent {\n    constructor($cardsService, dialog, _snackBar) {\n      this.$cardsService = $cardsService;\n      this.dialog = dialog;\n      this._snackBar = _snackBar;\n      this.userEmail = \"\";\n      this.cards = [];\n      this.numberOfSuperTypes = 0;\n      this.numberOfColors = 0;\n      this.durationInSeconds = 5;\n    }\n    ngOnInit() {\n      this.getCards();\n    }\n    getCards() {\n      if (this.userEmail) {\n        this.$cardsService.getCardsByUser(this.userEmail).subscribe({\n          next: response => {\n            this.cards = response;\n            this.numberOfSuperTypes = this.countNumberOfSuperTypes(this.cards);\n            this.numberOfColors = this.countNumberOfColors(this.cards);\n          },\n          error: error => {\n            this.openSnackBar('Error retrieving Cards');\n          }\n        });\n      }\n    }\n    countNumberOfSuperTypes(decks) {\n      let count = new Set();\n      decks.forEach(deck => {\n        deck.cards.forEach(card => {\n          count.add(card['supertype']);\n        });\n      });\n      return count.size;\n    }\n    countNumberOfColors(decks) {\n      let count = new Set();\n      decks.forEach(deck => {\n        deck.cards.forEach(card => {\n          card['types'].forEach(type => {\n            count.add(type);\n          });\n        });\n      });\n      return count.size;\n    }\n    viewDetails(card) {\n      const dialogRef = this.dialog.open(DeckDetailsComponent, {\n        width: '100%',\n        height: '90%'\n      });\n      dialogRef.componentInstance.deck = card;\n      dialogRef.afterClosed().subscribe(result => {});\n    }\n    editCard(card) {\n      const dialogRef = this.dialog.open(EditDeckFormComponent, {\n        width: '100%',\n        height: '90%'\n      });\n      dialogRef.componentInstance.deck = card;\n      dialogRef.afterClosed().subscribe(result => {});\n    }\n    deleteCard(id) {\n      this.$cardsService.deleteCardById(id).subscribe({\n        next: response => {\n          this.cards = response;\n          this.openSnackBar('Card deleted with success!');\n        },\n        error: error => {\n          this.openSnackBar('Error deleting card');\n        }\n      });\n      this.getCards();\n    }\n    openSnackBar(message) {\n      this._snackBar.openFromComponent(SnackBarComponent, {\n        duration: this.durationInSeconds * 1000,\n        data: {\n          message: message\n        }\n      });\n    }\n    static #_ = this.ɵfac = function CardComponent_Factory(t) {\n      return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.CardService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CardComponent,\n      selectors: [[\"app-cards\"]],\n      inputs: {\n        userEmail: \"userEmail\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"grid\", \"space-x-1\", \"lg:grid-cols-6\", \"p-4\", \"gap-2\"], [\"class\", \"bg-white border-2 border-gray-400 rounded\", 4, \"ngFor\", \"ngForOf\"], [1, \"bg-white\", \"border-2\", \"border-gray-400\", \"rounded\"], [1, \"bg-white\"], [\"src\", \"https://cdn.vox-cdn.com/thumbor/PqAwdNpc7p-5GUCSMxQPehSU-ck=/0x0:1920x1200/1200x800/filters:focal(810x375:1116x681)/cdn.vox-cdn.com/uploads/chorus_image/image/72524797/pikachu_artwork.0.jpg\", 1, \"w-full\", 3, \"alt\"], [1, \"px-6\", \"py-4\"], [1, \"font-bold\", \"text-xl\", \"mb-2\"], [1, \"text-gray-700\", \"text-sm\"], [1, \"font-bold\"], [\"mat-mini-fab\", \"\", \"color\", \"primary\", 1, \"mr-2\", 3, \"click\"], [\"mat-mini-fab\", \"\", \"color\", \"warn\", 3, \"click\"]],\n      template: function CardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, CardComponent_div_1_Template, 28, 5, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n        }\n      },\n      dependencies: [i4.NgForOf, i5.MatMiniFabButton, i6.MatIcon]\n    });\n  }\n  return CardComponent;\n})();\nexport { CardComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}