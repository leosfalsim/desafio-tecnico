{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The field shouldn't be empty! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Provide a valid e-mail! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The field shouldn't be empty! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The min of characters is 3! \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass LoginComponent {\n  constructor($loginService, formBuilder, router) {\n    this.$loginService = $loginService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    const EMAILPATTERN = new RegExp('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/');\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(EMAILPATTERN)]],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  doLogin() {\n    this.$loginService.getLogins().subscribe(response => {\n      this.findingByUser(response);\n    }, error => {\n      console.error('Error fetching logins:', error);\n      alert('An error occurred while logging in. Please try again later.');\n    });\n  }\n  findingByUser(response) {\n    const user = response.find(u => u.email === this.form.value.email && u.password === this.form.value.password);\n    if (user) {\n      this.loggingUser(user);\n    } else {\n      alert('User not found!');\n    }\n  }\n  loggingUser(user) {\n    localStorage.setItem('login', user.email);\n    this.form.reset();\n    alert('WOWWW! User Found!');\n    this.router.navigate(['dashboard']);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 6,\n    consts: [[1, \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\", \"mt-10\"], [1, \"text-center\", \"text-2xl\", \"font-bold\", \"text-gray-900\"], [1, \"mt-5\", \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"E-mail\", \"id\", \"email\", \"formControlName\", \"email\", \"type\", \"text\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \" Login into account \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-card\")(5, \"mat-card-content\")(6, \"form\", 3)(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, LoginComponent_mat_error_9_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(10, LoginComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵtemplate(13, LoginComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(14, LoginComponent_mat_error_14_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n          return ctx.doLogin();\n        });\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.dirty && ctx.form.controls.email.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.email.dirty && ctx.form.controls.email.hasError(\"pattern\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.dirty && ctx.form.controls.password.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.dirty && ctx.form.controls.password.hasError(\"minlength\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.MatButton, i6.MatFormField, i6.MatError, i7.MatInput, i8.MatCard, i8.MatCardContent],\n    styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n  .mat-mdc-card {\\n  --mdc-elevated-card-container-elevation: none !important;\\n}\\n\\n  .mdc-text-field {\\n  background-color: white !important;\\n  border-radius: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxBcnF1aXZvcyUyMGRlJTIwUHJvZ3JhbWFzXFxTb2Z0d2FyZUZhY3RvcnlcXGRlc2FmaW8tdGVjbmljb1xccG9rZW1vbmFwcFxcc3JjXFxhcHBcXGNvbXBvbmVudHNcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUNJLHdEQUFBO0FDQ0o7O0FERUE7RUFFRSxrQ0FBQTtFQUNBLDJCQUFBO0FDQUYiLCJmaWxlIjoibG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LW1kYy1jYXJkIHtcclxuICAgIC0tbWRjLWVsZXZhdGVkLWNhcmQtY29udGFpbmVyLWVsZXZhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbjo6bmctZGVlcCAubWRjLXRleHQtZmllbGRcclxue1xyXG4gIGJhY2tncm91bmQtY29sb3I6d2hpdGUgIWltcG9ydGFudDtcclxuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XHJcbn1cclxuIiwibWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuOjpuZy1kZWVwIC5tYXQtbWRjLWNhcmQge1xuICAtLW1kYy1lbGV2YXRlZC1jYXJkLWNvbnRhaW5lci1lbGV2YXRpb246IG5vbmUgIWltcG9ydGFudDtcbn1cblxuOjpuZy1kZWVwIC5tZGMtdGV4dC1maWVsZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcbn0iXX0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uL0FycXVpdm9zJTIwZGUlMjBQcm9ncmFtYXMvU29mdHdhcmVGYWN0b3J5L2Rlc2FmaW8tdGVjbmljby9wb2tlbW9uYXBwL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUNJLHdEQUFBO0FDQ0o7O0FERUE7RUFFRSxrQ0FBQTtFQUNBLDJCQUFBO0FDQUY7QURDQSw0cUNBQTRxQyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtbWRjLWNhcmQge1xyXG4gICAgLS1tZGMtZWxldmF0ZWQtY2FyZC1jb250YWluZXItZWxldmF0aW9uOiBub25lICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5cclxuOjpuZy1kZWVwIC5tZGMtdGV4dC1maWVsZFxyXG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZSAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcclxufVxyXG4iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG46Om5nLWRlZXAgLm1hdC1tZGMtY2FyZCB7XG4gIC0tbWRjLWVsZXZhdGVkLWNhcmQtY29udGFpbmVyLWVsZXZhdGlvbjogbm9uZSAhaW1wb3J0YW50O1xufVxuXG46Om5nLWRlZXAgLm1kYy10ZXh0LWZpZWxkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","$loginService","formBuilder","router","ngOnInit","createForm","EMAILPATTERN","RegExp","form","group","email","required","pattern","password","minLength","doLogin","getLogins","subscribe","response","findingByUser","error","console","alert","user","find","u","value","loggingUser","localStorage","setItem","reset","navigate","_","ɵɵdirectiveInject","i1","LoginService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_mat_error_9_Template","LoginComponent_mat_error_10_Template","LoginComponent_mat_error_13_Template","LoginComponent_mat_error_14_Template","ɵɵlistener","LoginComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","controls","dirty","hasError","valid"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LoginService } from './service/login.service';\r\nimport { Ilogin } from 'src/app/interfaces/Ilogin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { min } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public form!: FormGroup;\r\n\r\n  constructor(\r\n    private $loginService: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    const EMAILPATTERN = new RegExp('/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/');\r\n\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.pattern(EMAILPATTERN)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    this.$loginService.getLogins().subscribe(\r\n      (response: Array<Ilogin>) => {\r\n        this.findingByUser(response);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching logins:', error);\r\n        alert('An error occurred while logging in. Please try again later.');\r\n      }\r\n    );\r\n  }\r\n\r\n  findingByUser(response: Array<Ilogin>) {\r\n    const user = response.find(u => u.email === this.form.value.email && u.password === this.form.value.password);\r\n    if (user) {\r\n      this.loggingUser(user);\r\n    } else {\r\n      alert('User not found!');\r\n    }\r\n  }\r\n\r\n  loggingUser(user: Ilogin) {\r\n    localStorage.setItem('login', user.email);\r\n    this.form.reset();\r\n    alert('WOWWW! User Found!');\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n}\r\n","\r\n  <div class=\"sm:mx-auto sm:w-full sm:max-w-sm mt-10\">\r\n    <h2 class=\"text-center text-2xl font-bold text-gray-900\">\r\n      Login into account\r\n    </h2>\r\n  </div>\r\n\r\n  <div class=\"mt-5 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"form\">\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"E-mail\" id=\"email\" formControlName=\"email\" type=\"text\">\r\n            <mat-error\r\n              *ngIf=\"(form.controls.email.dirty)\r\n              && form.controls.email.hasError('required')\">\r\n              The field shouldn't be empty!\r\n            </mat-error>\r\n            <mat-error\r\n              *ngIf=\"(form.controls.email.dirty)\r\n              && form.controls.email.hasError('pattern')\">\r\n              Provide a valid e-mail!\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\" type=\"password\">\r\n            <mat-error\r\n              *ngIf=\"(form.controls.password.dirty)\r\n              && form.controls.password.hasError('required')\">\r\n              The field shouldn't be empty!\r\n            </mat-error>\r\n            <mat-error\r\n              *ngIf=\"(form.controls.password.dirty)\r\n              && form.controls.password.hasError('minlength')\">\r\n              The min of characters is 3!\r\n            </mat-error>\r\n          </mat-form-field>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n            (click)=\"doLogin()\"\r\n            >Login</button>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}