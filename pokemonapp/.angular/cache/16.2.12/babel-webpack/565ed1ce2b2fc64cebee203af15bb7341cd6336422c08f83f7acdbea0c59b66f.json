{"ast":null,"code":"import { DeckDetailsComponent } from '../deckdetails/deckdetails.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/card.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nfunction CardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵtext(2, \"\\nkokoko \");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass CardComponent {\n  constructor($cardsService, dialog) {\n    this.$cardsService = $cardsService;\n    this.dialog = dialog;\n    this.userEmail = \"\";\n    this.cards = [];\n  }\n  ngOnInit() {\n    this.getCards();\n  }\n  getCards() {\n    if (this.userEmail) {\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe(response => {\n        this.cards = response;\n      });\n    }\n  }\n  openDialog(id) {\n    const dialogRef = this.dialog.open(DeckDetailsComponent);\n    let card = this.cards.find(c => {\n      return c.id === id;\n    });\n    dialogRef.componentInstance.deck = card;\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  deleteCard(id) {\n    this.$cardsService.deleteCardById(id).subscribe(response => {\n      this.cards = response;\n    });\n    this.getCards();\n  }\n  static #_ = this.ɵfac = function CardComponent_Factory(t) {\n    return new (t || CardComponent)(i0.ɵɵdirectiveInject(i1.CardService), i0.ɵɵdirectiveInject(i2.MatDialog));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CardComponent,\n    selectors: [[\"app-cards\"]],\n    inputs: {\n      userEmail: \"userEmail\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[\"class\", \"p-4 bg-amber-300\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-8\", \"bg-red-500\", \"h-30\"], [1, \"grid\", \"grid-cols-6\", \"bg-amber-300\"], [1, \"p-4\", \"bg-amber-300\"], [1, \"grid\", \"grid-cols-12\", \"gap-4\", \"bg-red-400\"]],\n    template: function CardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CardComponent_div_0_Template, 3, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \" pllp \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.cards);\n      }\n    },\n    dependencies: [i3.NgForOf],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjYXJkcy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jYXJkcy9jYXJkcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { CardComponent };","map":{"version":3,"names":["DeckDetailsComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","CardComponent","constructor","$cardsService","dialog","userEmail","cards","ngOnInit","getCards","getCardsByUser","subscribe","response","openDialog","id","dialogRef","open","card","find","c","componentInstance","deck","afterClosed","result","deleteCard","deleteCardById","_","ɵɵdirectiveInject","i1","CardService","i2","MatDialog","_2","selectors","inputs","decls","vars","consts","template","CardComponent_Template","rf","ctx","ɵɵtemplate","CardComponent_div_0_Template","ɵɵproperty"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\cards\\cards.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\cards\\cards.component.html"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { CardService } from './service/card.service';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DeckDetailsComponent } from '../deckdetails/deckdetails.component';\r\n\r\n@Component({\r\n  selector: 'app-cards',\r\n  templateUrl: './cards.component.html',\r\n  styleUrls: ['./cards.component.scss']\r\n})\r\nexport class CardComponent implements OnInit {\r\n\r\n  @Input() userEmail: string = \"\";\r\n\r\n  public cards: Array<Ideck> = [];\r\n\r\n  constructor(\r\n    private $cardsService: CardService,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCards();\r\n  }\r\n\r\n  getCards() {\r\n    if(this.userEmail) {\r\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe((response: Array<Ideck>) => {\r\n        this.cards = response;\r\n      });\r\n    }\r\n  }\r\n\r\n  openDialog(id: number) {\r\n    const dialogRef = this.dialog.open(DeckDetailsComponent);\r\n\r\n    let card = this.cards.find((c: Ideck) => {\r\n      return c.id === id;\r\n    });\r\n\r\n    dialogRef.componentInstance.deck = card!;\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n    });\r\n  }\r\n\r\n  deleteCard(id: number) {\r\n    this.$cardsService.deleteCardById(id).subscribe((response: any) => {\r\n      this.cards = response;\r\n    });\r\n    this.getCards();\r\n  }\r\n}\r\n","<div *ngFor=\"let card of cards\" class=\"p-4 bg-amber-300\">\r\n  <div class=\"grid grid-cols-12 gap-4 bg-red-400\">\r\nkokoko\r\n  </div>\r\n</div>\r\n\r\n<div class=\"p-8 bg-red-500 h-30\">\r\n  <div class=\"grid grid-cols-6 bg-amber-300\">\r\n    pllp\r\n  </div>\r\n</div>\r\n"],"mappings":"AAKA,SAASA,oBAAoB,QAAQ,sCAAsC;;;;;;;ICL3EC,EAAA,CAAAC,cAAA,aAAyD;IAEzDD,EAAA,CAAAE,MAAA,gBACE;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;ADIR,MAKaC,aAAa;EAMxBC,YACUC,aAA0B,EAC3BC,MAAiB;IADhB,KAAAD,aAAa,GAAbA,aAAa;IACd,KAAAC,MAAM,GAANA,MAAM;IANN,KAAAC,SAAS,GAAW,EAAE;IAExB,KAAAC,KAAK,GAAiB,EAAE;EAK5B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,EAAE;EACjB;EAEAA,QAAQA,CAAA;IACN,IAAG,IAAI,CAACH,SAAS,EAAE;MACjB,IAAI,CAACF,aAAa,CAACM,cAAc,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACK,SAAS,CAAEC,QAAsB,IAAI;QACrF,IAAI,CAACL,KAAK,GAAGK,QAAQ;MACvB,CAAC,CAAC;;EAEN;EAEAC,UAAUA,CAACC,EAAU;IACnB,MAAMC,SAAS,GAAG,IAAI,CAACV,MAAM,CAACW,IAAI,CAACnB,oBAAoB,CAAC;IAExD,IAAIoB,IAAI,GAAG,IAAI,CAACV,KAAK,CAACW,IAAI,CAAEC,CAAQ,IAAI;MACtC,OAAOA,CAAC,CAACL,EAAE,KAAKA,EAAE;IACpB,CAAC,CAAC;IAEFC,SAAS,CAACK,iBAAiB,CAACC,IAAI,GAAGJ,IAAK;IAExCF,SAAS,CAACO,WAAW,EAAE,CAACX,SAAS,CAAEY,MAAW,IAAI,CAClD,CAAC,CAAC;EACJ;EAEAC,UAAUA,CAACV,EAAU;IACnB,IAAI,CAACV,aAAa,CAACqB,cAAc,CAACX,EAAE,CAAC,CAACH,SAAS,CAAEC,QAAa,IAAI;MAChE,IAAI,CAACL,KAAK,GAAGK,QAAQ;IACvB,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,EAAE;EACjB;EAAC,QAAAiB,CAAA,G;qBAzCUxB,aAAa,EAAAJ,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAA/B,EAAA,CAAA6B,iBAAA,CAAAG,EAAA,CAAAC,SAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAb9B,aAAa;IAAA+B,SAAA;IAAAC,MAAA;MAAA5B,SAAA;IAAA;IAAA6B,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ1B1C,EAAA,CAAA4C,UAAA,IAAAC,4BAAA,iBAIM;QAEN7C,EAAA,CAAAC,cAAA,aAAiC;QAE7BD,EAAA,CAAAE,MAAA,aACF;QAAAF,EAAA,CAAAG,YAAA,EAAM;;;QATcH,EAAA,CAAA8C,UAAA,YAAAH,GAAA,CAAAlC,KAAA,CAAQ;;;;;;;SDYjBL,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}