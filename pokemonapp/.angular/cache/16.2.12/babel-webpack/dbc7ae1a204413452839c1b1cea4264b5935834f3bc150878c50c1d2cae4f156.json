{"ast":null,"code":"import { NewdeckFormComponent } from 'src/app/components/newdeckform/new-deck-form.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/icon\";\nclass DeckOfCardsComponent {\n  constructor(dialog, route) {\n    this.dialog = dialog;\n    this.route = route;\n    this.userEmail = \"\";\n    this.componentName = '';\n  }\n  ngOnInit() {\n    this.getCurrentUser();\n    this.componentName = this.route.firstChild?.component?.name;\n  }\n  getCurrentUser() {\n    this.userEmail = localStorage.getItem('login') || '';\n  }\n  createNewDeck() {\n    const dialogRef = this.dialog.open(NewdeckFormComponent, {\n      width: '100%',\n      height: '90%'\n    });\n    dialogRef.afterClosed().subscribe(result => {});\n  }\n  static #_ = this.ɵfac = function DeckOfCardsComponent_Factory(t) {\n    return new (t || DeckOfCardsComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeckOfCardsComponent,\n    selectors: [[\"app-deckofcards\"]],\n    decls: 7,\n    vars: 1,\n    consts: [[1, \"grid\", \"grid-cols-1\", \"p-4\"], [1, \"gid\", \"grid-rows-4\", \"grid-flow-col\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [3, \"userEmail\"]],\n    template: function DeckOfCardsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function DeckOfCardsComponent_Template_button_click_2_listener() {\n          return ctx.createNewDeck();\n        });\n        i0.ɵɵelementStart(3, \"mat-icon\");\n        i0.ɵɵtext(4, \"create_new_folder\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(5, \" New Deck \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(6, \"app-cards\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"userEmail\", ctx.userEmail);\n      }\n    },\n    dependencies: [i3.MatButton, i4.MatIcon],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkZWNrb2ZjYXJkcy5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGVja09mQ2FyZHMvZGVja29mY2FyZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLHdLQUF3SyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { DeckOfCardsComponent };","map":{"version":3,"names":["NewdeckFormComponent","DeckOfCardsComponent","constructor","dialog","route","userEmail","componentName","ngOnInit","getCurrentUser","firstChild","component","name","localStorage","getItem","createNewDeck","dialogRef","open","width","height","afterClosed","subscribe","result","_","i0","ɵɵdirectiveInject","i1","MatDialog","i2","ActivatedRoute","_2","selectors","decls","vars","consts","template","DeckOfCardsComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","DeckOfCardsComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\deckOfCards\\deckofcards.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\deckOfCards\\deckofcards.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NewdeckFormComponent } from 'src/app/components/newdeckform/new-deck-form.component';\r\n\r\n@Component({\r\n  selector: 'app-deckofcards',\r\n  templateUrl: './deckofcards.component.html',\r\n  styleUrls: ['./deckofcards.component.scss']\r\n})\r\nexport class DeckOfCardsComponent implements OnInit {\r\n\r\n  public userEmail: string = \"\";\r\n  public componentName: string = '';\r\n\r\n  constructor(\r\n    public dialog: MatDialog,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCurrentUser();\r\n    this.componentName = this.route.firstChild?.component?.name!;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    this.userEmail = localStorage.getItem('login') || '';\r\n  }\r\n\r\n  createNewDeck() {\r\n    const dialogRef = this.dialog.open(NewdeckFormComponent, {\r\n      width: '100%',\r\n      height: '90%'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe((result: any) => {\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"grid grid-cols-1 p-4\">\r\n  <div class=\"gid grid-rows-4 grid-flow-col\">\r\n    <button mat-raised-button color=\"primary\" (click)=\"createNewDeck()\">\r\n      <mat-icon>create_new_folder</mat-icon>\r\n      New Deck\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n<app-cards [userEmail]=\"userEmail\"></app-cards>\r\n\r\n"],"mappings":"AAGA,SAASA,oBAAoB,QAAQ,wDAAwD;;;;;;AAE7F,MAKaC,oBAAoB;EAK/BC,YACSC,MAAiB,EAChBC,KAAqB;IADtB,KAAAD,MAAM,GAANA,MAAM;IACL,KAAAC,KAAK,GAALA,KAAK;IALR,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,aAAa,GAAW,EAAE;EAK7B;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACF,aAAa,GAAG,IAAI,CAACF,KAAK,CAACK,UAAU,EAAEC,SAAS,EAAEC,IAAK;EAC9D;EAEAH,cAAcA,CAAA;IACZ,IAAI,CAACH,SAAS,GAAGO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EACtD;EAEAC,aAAaA,CAAA;IACX,MAAMC,SAAS,GAAG,IAAI,CAACZ,MAAM,CAACa,IAAI,CAAChB,oBAAoB,EAAE;MACvDiB,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;KACT,CAAC;IAEFH,SAAS,CAACI,WAAW,EAAE,CAACC,SAAS,CAAEC,MAAW,IAAI,CAClD,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBA3BUrB,oBAAoB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,SAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApB5B,oBAAoB;IAAA6B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVjCb,EAAA,CAAAe,cAAA,aAAkC;QAEYf,EAAA,CAAAgB,UAAA,mBAAAC,sDAAA;UAAA,OAASH,GAAA,CAAAvB,aAAA,EAAe;QAAA,EAAC;QACjES,EAAA,CAAAe,cAAA,eAAU;QAAAf,EAAA,CAAAkB,MAAA,wBAAiB;QAAAlB,EAAA,CAAAmB,YAAA,EAAW;QACtCnB,EAAA,CAAAkB,MAAA,iBACF;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAKbnB,EAAA,CAAAoB,SAAA,mBAA+C;;;QAApCpB,EAAA,CAAAqB,SAAA,GAAuB;QAAvBrB,EAAA,CAAAsB,UAAA,cAAAR,GAAA,CAAAhC,SAAA,CAAuB;;;;;;;SDArBJ,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}