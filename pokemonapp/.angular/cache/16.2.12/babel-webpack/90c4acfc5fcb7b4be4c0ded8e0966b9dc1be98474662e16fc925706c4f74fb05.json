{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/card\";\nclass LoginComponent {\n  constructor($loginService, formBuilder, router) {\n    this.$loginService = $loginService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])]\n    });\n  }\n  doLogin() {\n    this.$loginService.getLogins().subscribe(response => {\n      this.findingByUser(response);\n    }, error => {\n      console.error('Error fetching logins:', error);\n      alert('An error occurred while logging in. Please try again later.');\n    });\n  }\n  findingByUser(response) {\n    const user = response.find(u => u.email === this.form.value.email && u.password === this.form.value.password);\n    if (user) {\n      this.loggingUser(user);\n    } else {\n      alert('User not found!');\n    }\n  }\n  loggingUser(user) {\n    localStorage.setItem('login', user.email);\n    this.form.reset();\n    alert('WOWWW! User Found!');\n    this.router.navigate(['dashboard']);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\"], [\"src\", \"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\", \"alt\", \"Your Company\", 1, \"mx-auto\", \"h-10\", \"w-auto\"], [1, \"mt-10\", \"text-center\", \"text-2xl\", \"font-bold\", \"leading-9\", \"tracking-tight\", \"text-gray-900\"], [1, \"mt-5\", \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"E-mail\", \"id\", \"email\", \"formControlName\", \"email\", \"type\", \"text\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"LogIn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵelementStart(4, \"h2\", 2);\n        i0.ɵɵtext(5, \"Login into account\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"mat-card\")(8, \"mat-card-content\")(9, \"form\", 4)(10, \"mat-form-field\");\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\");\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n          return ctx.doLogin();\n        });\n        i0.ɵɵtext(15, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i4.MatButton, i5.MatFormField, i6.MatInput, i7.MatCard, i7.MatCardContent],\n    styles: [\"mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n  .mdc-text-field {\\n  background-color: white !important;\\n  border-radius: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIiwiLi5cXC4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXC4uXFxBcnF1aXZvcyUyMGRlJTIwUHJvZ3JhbWFzXFxTb2Z0d2FyZUZhY3RvcnlcXGRlc2FmaW8tdGVjbmljb1xccG9rZW1vbmFwcFxcc3JjXFxhcHBcXGNvbXBvbmVudHNcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUVFLGtDQUFBO0VBQ0EsMkJBQUE7QUNBRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tZGMtdGV4dC1maWVsZFxyXG57XHJcbiAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZSAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1yYWRpdXM6IDAgIWltcG9ydGFudDtcclxufVxyXG4iLCJtYXQtZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG46Om5nLWRlZXAgLm1kYy10ZXh0LWZpZWxkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xufSJdfQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uLy4uLy4uL0FycXVpdm9zJTIwZGUlMjBQcm9ncmFtYXMvU29mdHdhcmVGYWN0b3J5L2Rlc2FmaW8tdGVjbmljby9wb2tlbW9uYXBwL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUNDRjs7QURFQTtFQUVFLGtDQUFBO0VBQ0EsMkJBQUE7QUNBRjtBRENBLHc0QkFBdzRCIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1kYy10ZXh0LWZpZWxkXHJcbntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOndoaXRlICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xyXG59XHJcbiIsIm1hdC1mb3JtLWZpZWxkIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbjo6bmctZGVlcCAubWRjLXRleHQtZmllbGQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xuICBib3JkZXItcmFkaXVzOiAwICFpbXBvcnRhbnQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","LoginComponent","constructor","$loginService","formBuilder","router","ngOnInit","createForm","form","group","email","compose","required","password","doLogin","getLogins","subscribe","response","findingByUser","error","console","alert","user","find","u","value","loggingUser","localStorage","setItem","reset","navigate","_","i0","ɵɵdirectiveInject","i1","LoginService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_14_listener","ɵɵadvance","ɵɵproperty","valid"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LoginService } from './service/login.service';\r\nimport { Ilogin } from 'src/app/interfaces/Ilogin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public form!: FormGroup;\r\n\r\n  constructor(\r\n    private $loginService: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  doLogin() {\r\n    this.$loginService.getLogins().subscribe(\r\n      (response: Array<Ilogin>) => {\r\n        this.findingByUser(response);\r\n      },\r\n      (error) => {\r\n        console.error('Error fetching logins:', error);\r\n        alert('An error occurred while logging in. Please try again later.');\r\n      }\r\n    );\r\n  }\r\n\r\n  findingByUser(response: Array<Ilogin>) {\r\n    const user = response.find(u => u.email === this.form.value.email && u.password === this.form.value.password);\r\n    if (user) {\r\n      this.loggingUser(user);\r\n    } else {\r\n      alert('User not found!');\r\n    }\r\n  }\r\n\r\n  loggingUser(user: Ilogin) {\r\n    localStorage.setItem('login', user.email);\r\n    this.form.reset();\r\n    alert('WOWWW! User Found!');\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n}\r\n","\r\n<h1>LogIn</h1>\r\n<!-- <form [formGroup]=\"form\">\r\n  <input\r\n    type=\"text\"\r\n    id=\"email\"\r\n    formControlName=\"email\"\r\n    placeholder=\"Digite o e-mail\"\r\n  >\r\n  <input\r\n    type=\"password\"\r\n    id=\"password\"\r\n    formControlName=\"password\"\r\n    placeholder=\"Digite o password\"\r\n  >\r\n  <button\r\n    [disabled]=\"!form.valid\"\r\n    (click)=\"getLogins()\"\r\n    >Login\r\n  </button>\r\n</form> -->\r\n\r\n\r\n  <div class=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n    <img class=\"mx-auto h-10 w-auto\" src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\" alt=\"Your Company\">\r\n    <h2 class=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">Login into account</h2>\r\n  </div>\r\n\r\n\r\n\r\n  <div class=\"mt-5 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"form\">\r\n          <!-- <mat-error>\r\n            The username and password were not recognized\r\n          </mat-error> -->\r\n          <mat-form-field>\r\n            <input matInput placeholder=\"E-mail\" id=\"email\" formControlName=\"email\" type=\"text\">\r\n            <!-- <mat-error>\r\n              Please provide a valid email address\r\n            </mat-error> -->\r\n          </mat-form-field>\r\n          <mat-form-field>\r\n            <input matInput type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\" type=\"password\">\r\n            <!-- <mat-error>\r\n              Please provide a valid password\r\n            </mat-error> -->\r\n          </mat-form-field>\r\n          <button\r\n            mat-raised-button\r\n            color=\"primary\"\r\n            [disabled]=\"!form.valid\"\r\n            (click)=\"doLogin()\"\r\n            >Login</button>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}