{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/components/cards/service/card.service\";\nclass DashboardComponent {\n  constructor(router, route, $cardsService) {\n    this.router = router;\n    this.route = route;\n    this.$cardsService = $cardsService;\n    this.allCards = {\n      count: 0,\n      data: [],\n      page: 0,\n      pageSize: 0,\n      totalCount: 0\n    };\n    this.decks = [];\n    this.currentRoute = '';\n    this.stats = {\n      totalOfCards: 0,\n      numberOfDecks: 0,\n      numberOfCardsSelected: 0,\n      totalHP: 0,\n      highLevelCard: 0,\n      totalPrice: 0\n    };\n    this.userEmail = '';\n    this.componentName = '';\n  }\n  ngOnInit() {\n    // this.getAllCards();\n    // this.getCardsByUser();\n    // this.checkRoute();\n    // this.componentName = this.route.firstChild?.component?.name!;\n    // console.log(this.componentName);\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[1, \"flex\", \"w-screen\", \"h-screen\", \"text-gray-700\", \"overflow-x-hidden\"], [1, \"flex\", \"flex-col\", \"flex-grow\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-leftmenu\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-header\")(4, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["DashboardComponent","constructor","router","route","$cardsService","allCards","count","data","page","pageSize","totalCount","decks","currentRoute","stats","totalOfCards","numberOfDecks","numberOfCardsSelected","totalHP","highLevelCard","totalPrice","userEmail","componentName","ngOnInit","_","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","CardService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CardService } from 'src/app/components/cards/service/card.service';\r\nimport { IStats } from 'src/app/interfaces/IStats';\r\nimport { Data, ICard } from 'src/app/interfaces/Icard';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public allCards: ICard = {\r\n    count: 0,\r\n    data: [],\r\n    page: 0,\r\n    pageSize: 0,\r\n    totalCount: 0\r\n  };\r\n\r\n  public decks: Array<Ideck> = [];\r\n\r\n  public currentRoute: string = '';\r\n\r\n  public stats: IStats = {\r\n    totalOfCards: 0,\r\n    numberOfDecks: 0,\r\n    numberOfCardsSelected: 0,\r\n    totalHP: 0,\r\n    highLevelCard: 0,\r\n    totalPrice: 0\r\n  };\r\n\r\n  public userEmail: string = '';\r\n\r\n  public componentName: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private $cardsService: CardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // this.getAllCards();\r\n    // this.getCardsByUser();\r\n    // this.checkRoute();\r\n    // this.componentName = this.route.firstChild?.component?.name!;\r\n    // console.log(this.componentName);\r\n  }\r\n\r\n  // getAllCards() {\r\n  //   this.$cardsService.getAllCards().subscribe({\r\n  //     next: (response: ICard) => {\r\n  //       this.allCards = response;\r\n  //       this.stats.totalOfCards = this.allCards.count;\r\n  //       //this.isLoading = false;\r\n  //     },\r\n  //     error: (error: HttpErrorResponse) => {\r\n  //       //this.openSnackBar('Error retrieving Cards');\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // getCardsByUser() {\r\n  //   this.userEmail = localStorage.getItem('login') || '';\r\n  //   if(this.userEmail) {\r\n  //     this.$cardsService.getCardsByUser(this.userEmail).subscribe((response: Array<Ideck>) => {\r\n  //       this.decks = response;\r\n  //       this.stats.numberOfDecks = this.decks.length;\r\n  //       this.getDeckStats(this.decks);\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  // checkRoute() {\r\n  //   this.currentRoute = this.route.snapshot.url[0].path;\r\n  //   console.log(this.currentRoute);\r\n  // }\r\n\r\n  // getDeckStats(decks: Array<Ideck>) {\r\n  //   decks.forEach((deck: Ideck) => {\r\n  //     this.stats.numberOfCardsSelected += deck.cards.length;\r\n  //     deck.cards.forEach((card: Data) => {\r\n  //       this.stats.totalHP += Number(card.hp);\r\n  //       let currentLevel = Number(card['level']);\r\n  //       this.stats.highLevelCard = currentLevel > this.stats.highLevelCard ? currentLevel : this.stats.highLevelCard;\r\n  //       this.stats.totalPrice += card.cardmarket.prices.trendPrice;\r\n  //     });\r\n  //   });\r\n  // }\r\n}\r\n","<div class=\"flex w-screen h-screen text-gray-700 overflow-x-hidden\">\r\n  <app-leftmenu></app-leftmenu>\r\n  <div class=\"flex flex-col flex-grow\">\r\n      <app-header></app-header>\r\n      <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n"],"mappings":";;;AAQA,MAKaA,kBAAkB;EA2B7BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,aAA0B;IAF1B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,aAAa,GAAbA,aAAa;IA5BhB,KAAAC,QAAQ,GAAU;MACvBC,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,CAAC;MACPC,QAAQ,EAAE,CAAC;MACXC,UAAU,EAAE;KACb;IAEM,KAAAC,KAAK,GAAiB,EAAE;IAExB,KAAAC,YAAY,GAAW,EAAE;IAEzB,KAAAC,KAAK,GAAW;MACrBC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE,CAAC;MAChBC,qBAAqB,EAAE,CAAC;MACxBC,OAAO,EAAE,CAAC;MACVC,aAAa,EAAE,CAAC;MAChBC,UAAU,EAAE;KACb;IAEM,KAAAC,SAAS,GAAW,EAAE;IAEtB,KAAAC,aAAa,GAAW,EAAE;EAM9B;EAEHC,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;EAAA;EACD,QAAAC,CAAA,G;qBAvCUvB,kBAAkB,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,cAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlB/B,kBAAkB;IAAAgC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb/Bd,EAAA,CAAAgB,cAAA,aAAoE;QAClEhB,EAAA,CAAAiB,SAAA,mBAA6B;QAC7BjB,EAAA,CAAAgB,cAAA,aAAqC;QACjChB,EAAA,CAAAiB,SAAA,iBAAyB;QAE7BjB,EAAA,CAAAkB,YAAA,EAAM;;;;;;SDQK1C,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}