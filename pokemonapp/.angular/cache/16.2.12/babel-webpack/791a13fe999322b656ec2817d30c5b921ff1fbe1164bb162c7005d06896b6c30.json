{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/components/cards/service/card.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../../components/header/header.component\";\nimport * as i5 from \"../../components/left-menu/leftmenu.component\";\nimport * as i6 from \"../../components/stats/stats.component\";\nfunction DashboardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵelement(2, \"div\", 6)(3, \"div\", 7);\n    i0.ɵɵelementEnd()();\n  }\n}\nclass DashboardComponent {\n  constructor(router, $cardsService) {\n    this.router = router;\n    this.$cardsService = $cardsService;\n    this.allCards = {\n      count: 0,\n      data: [],\n      page: 0,\n      pageSize: 0,\n      totalCount: 0\n    };\n    this.decks = [];\n    this.routesApp = [{\n      id: 1,\n      route: \"/dashboard/deckofcards\",\n      active: false\n    }];\n    this.currentRoute = {\n      id: -1,\n      route: \"\",\n      active: false\n    };\n    this.stats = {\n      totalOfCards: 0,\n      numberOfDecks: 0,\n      numberOfCardsSelected: 0,\n      totalHP: 0,\n      highLevelCard: 0,\n      totalPrice: 0\n    };\n    this.userEmail = '';\n  }\n  ngOnInit() {\n    this.getAllCards();\n    this.getCardsByUser();\n    this.checkRoute();\n  }\n  getAllCards() {\n    this.$cardsService.getAllCards().subscribe({\n      next: response => {\n        this.allCards = response;\n        this.stats.totalOfCards = this.allCards.count;\n        //this.isLoading = false;\n      },\n\n      error: error => {\n        //this.openSnackBar('Error retrieving Cards');\n      }\n    });\n  }\n  getCardsByUser() {\n    this.userEmail = localStorage.getItem('login') || '';\n    if (this.userEmail) {\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe(response => {\n        this.decks = response;\n        this.stats.numberOfDecks = this.decks.length;\n        this.getDeckStats(this.decks);\n      });\n    }\n  }\n  checkRoute() {\n    this.currentRoute = this.routesApp.find(r => {\n      r.active = true;\n      return r.route === this.router.url;\n    });\n  }\n  getDeckStats(decks) {\n    decks.forEach(deck => {\n      this.stats.numberOfCardsSelected += deck.cards.length;\n      deck.cards.forEach(card => {\n        this.stats.totalHP += Number(card.hp);\n        let currentLevel = Number(card['level']);\n        this.stats.highLevelCard = currentLevel > this.stats.highLevelCard ? currentLevel : this.stats.highLevelCard;\n        this.stats.totalPrice += card.cardmarket.prices.trendPrice;\n      });\n    });\n  }\n  static #_ = this.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.CardService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"flex\", \"w-screen\", \"h-screen\", \"text-gray-700\"], [1, \"flex\", \"flex-col\", \"flex-grow\"], [3, \"stats\"], [\"class\", \"flex items-center justify-center w-full h-screen\", 4, \"ngIf\"], [1, \"flex\", \"items-center\", \"justify-center\", \"w-full\", \"h-screen\"], [1, \"relative\"], [1, \"h-24\", \"w-24\", \"rounded-full\", \"border-t-8\", \"border-b-8\", \"border-gray-200\"], [1, \"absolute\", \"top-0\", \"left-0\", \"h-24\", \"w-24\", \"rounded-full\", \"border-t-8\", \"border-b-8\", \"border-blue-500\", \"animate-spin\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-leftmenu\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"app-header\")(4, \"app-stats\", 2)(5, \"router-outlet\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, DashboardComponent_div_6_Template, 4, 0, \"div\", 3);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"stats\", ctx.stats);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.stats.totalOfCards <= 0);\n      }\n    },\n    dependencies: [i3.NgIf, i1.RouterOutlet, i4.HeaderComponent, i5.LeftMenuComponent, i6.StatsComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esd0tBQXdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { DashboardComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","DashboardComponent","constructor","router","$cardsService","allCards","count","data","page","pageSize","totalCount","decks","routesApp","id","route","active","currentRoute","stats","totalOfCards","numberOfDecks","numberOfCardsSelected","totalHP","highLevelCard","totalPrice","userEmail","ngOnInit","getAllCards","getCardsByUser","checkRoute","subscribe","next","response","error","localStorage","getItem","length","getDeckStats","find","r","url","forEach","deck","cards","card","Number","hp","currentLevel","cardmarket","prices","trendPrice","_","ɵɵdirectiveInject","i1","Router","i2","CardService","_2","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵtemplate","DashboardComponent_div_6_Template","ɵɵadvance","ɵɵproperty"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\pages\\dashboard\\dashboard.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CardService } from 'src/app/components/cards/service/card.service';\r\nimport { IStats } from 'src/app/interfaces/IStats';\r\nimport { Data, ICard } from 'src/app/interfaces/Icard';\r\nimport { Ideck } from 'src/app/interfaces/Ideck';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public allCards: ICard = {\r\n    count: 0,\r\n    data: [],\r\n    page: 0,\r\n    pageSize: 0,\r\n    totalCount: 0\r\n  };\r\n\r\n  public decks: Array<Ideck> = [];\r\n\r\n  public routesApp: Array<any> = [\r\n    {\r\n      id: 1,\r\n      route: \"/dashboard/deckofcards\",\r\n      active: false\r\n    }\r\n  ];\r\n\r\n  public currentRoute: any = {\r\n      id: -1,\r\n      route: \"\",\r\n      active: false\r\n  };\r\n\r\n  public stats: IStats = {\r\n    totalOfCards: 0,\r\n    numberOfDecks: 0,\r\n    numberOfCardsSelected: 0,\r\n    totalHP: 0,\r\n    highLevelCard: 0,\r\n    totalPrice: 0\r\n  };\r\n\r\n  public userEmail: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private $cardsService: CardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getAllCards();\r\n    this.getCardsByUser();\r\n    this.checkRoute();\r\n  }\r\n\r\n  getAllCards() {\r\n    this.$cardsService.getAllCards().subscribe({\r\n      next: (response: ICard) => {\r\n        this.allCards = response;\r\n        this.stats.totalOfCards = this.allCards.count;\r\n        //this.isLoading = false;\r\n      },\r\n      error: (error: HttpErrorResponse) => {\r\n        //this.openSnackBar('Error retrieving Cards');\r\n      }\r\n    });\r\n  }\r\n\r\n  getCardsByUser() {\r\n    this.userEmail = localStorage.getItem('login') || '';\r\n    if(this.userEmail) {\r\n      this.$cardsService.getCardsByUser(this.userEmail).subscribe((response: Array<Ideck>) => {\r\n        this.decks = response;\r\n        this.stats.numberOfDecks = this.decks.length;\r\n        this.getDeckStats(this.decks);\r\n      });\r\n    }\r\n  }\r\n\r\n  checkRoute() {\r\n    this.currentRoute = this.routesApp.find((r: any) => {\r\n      r.active = true;\r\n      return r.route === this.router.url;\r\n    });\r\n  }\r\n\r\n  getDeckStats(decks: Array<Ideck>) {\r\n    decks.forEach((deck: Ideck) => {\r\n      this.stats.numberOfCardsSelected += deck.cards.length;\r\n      deck.cards.forEach((card: Data) => {\r\n        this.stats.totalHP += Number(card.hp);\r\n        let currentLevel = Number(card['level']);\r\n        this.stats.highLevelCard = currentLevel > this.stats.highLevelCard ? currentLevel : this.stats.highLevelCard;\r\n        this.stats.totalPrice += card.cardmarket.prices.trendPrice;\r\n      });\r\n    });\r\n  }\r\n}\r\n","<div class=\"flex w-screen h-screen text-gray-700\">\r\n  <app-leftmenu></app-leftmenu>\r\n  <div class=\"flex flex-col flex-grow\">\r\n      <app-header></app-header>\r\n      <app-stats [stats]=\"stats\"></app-stats>\r\n      <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n<!-- loader -->\r\n<div *ngIf=\"stats.totalOfCards <= 0\" class=\"flex items-center justify-center w-full h-screen\">\r\n  <div class=\"relative\">\r\n      <div class=\"h-24 w-24 rounded-full border-t-8 border-b-8 border-gray-200\"></div>\r\n      <div class=\"absolute top-0 left-0 h-24 w-24 rounded-full border-t-8 border-b-8 border-blue-500 animate-spin\">\r\n      </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}