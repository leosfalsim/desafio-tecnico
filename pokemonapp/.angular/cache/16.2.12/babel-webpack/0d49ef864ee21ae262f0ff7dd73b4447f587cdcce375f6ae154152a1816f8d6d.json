{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nclass LoginComponent {\n  constructor($loginService, formBuilder, router) {\n    this.$loginService = $loginService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])]\n    });\n  }\n  getLogins() {\n    let user;\n    this.$loginService.getLogins().subscribe(response => {\n      user = response.find(u => {\n        return u.email === this.form.value.email && u.password === this.form.value.password;\n      });\n      if (user) {\n        localStorage.setItem('login', user.email);\n        this.form.reset();\n        alert('WOWWW! User Found!');\n        this.router.navigate(['dashboard']);\n      } else {\n        alert('User not found!');\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite o e-mail\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Digite o password\"], [3, \"disabled\", \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"LogIn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵelement(3, \"input\", 1)(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_5_listener() {\n          return ctx.getLogins();\n        });\n        i0.ɵɵtext(6, \"Login \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsZ0tBQWdLIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { LoginComponent };","map":{"version":3,"names":["Validators","LoginComponent","constructor","$loginService","formBuilder","router","ngOnInit","createForm","form","group","email","compose","required","password","getLogins","user","subscribe","response","find","u","value","localStorage","setItem","reset","alert","navigate","_","i0","ɵɵdirectiveInject","i1","LoginService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginComponent_Template_button_click_5_listener","ɵɵadvance","ɵɵproperty","valid"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LoginService } from './service/login.service';\r\nimport { Ilogin } from 'src/app/interfaces/Ilogin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public form!: FormGroup;\r\n\r\n  constructor(\r\n    private $loginService: LoginService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  getLogins() {\r\n    let user;\r\n\r\n    this.$loginService.getLogins().subscribe(response => {\r\n      user = response.find((u: Ilogin) => {\r\n        return u.email === this.form.value.email && u.password === this.form.value.password\r\n      });\r\n\r\n      if(user) {\r\n        localStorage.setItem('login', user.email);\r\n        this.form.reset();\r\n        alert('WOWWW! User Found!');\r\n        this.router.navigate(['dashboard']);\r\n      }else {\r\n        alert('User not found!');\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<h1>LogIn</h1>\r\n<form [formGroup]=\"form\">\r\n  <input\r\n    type=\"text\"\r\n    id=\"email\"\r\n    formControlName=\"email\"\r\n    placeholder=\"Digite o e-mail\"\r\n  >\r\n  <input\r\n    type=\"password\"\r\n    id=\"password\"\r\n    formControlName=\"password\"\r\n    placeholder=\"Digite o password\"\r\n  >\r\n  <button\r\n    [disabled]=\"!form.valid\"\r\n    (click)=\"getLogins()\"\r\n    >Login\r\n  </button>\r\n</form>\r\n"],"mappings":"AAIA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAGnE,MAKaC,cAAc;EAIzBC,YACUC,aAA2B,EAC3BC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,aAAa,GAAbA,aAAa;IACb,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC,CAAC;MACtDC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;KACzD,CAAC;EACJ;EAEAE,SAASA,CAAA;IACP,IAAIC,IAAI;IAER,IAAI,CAACZ,aAAa,CAACW,SAAS,EAAE,CAACE,SAAS,CAACC,QAAQ,IAAG;MAClDF,IAAI,GAAGE,QAAQ,CAACC,IAAI,CAAEC,CAAS,IAAI;QACjC,OAAOA,CAAC,CAACT,KAAK,KAAK,IAAI,CAACF,IAAI,CAACY,KAAK,CAACV,KAAK,IAAIS,CAAC,CAACN,QAAQ,KAAK,IAAI,CAACL,IAAI,CAACY,KAAK,CAACP,QAAQ;MACrF,CAAC,CAAC;MAEF,IAAGE,IAAI,EAAE;QACPM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACL,KAAK,CAAC;QACzC,IAAI,CAACF,IAAI,CAACe,KAAK,EAAE;QACjBC,KAAK,CAAC,oBAAoB,CAAC;QAC3B,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAK;QACJD,KAAK,CAAC,iBAAiB,CAAC;;IAE5B,CAAC,CAAC;EACJ;EAAC,QAAAE,CAAA,G;qBAtCUzB,cAAc,EAAA0B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdlC,cAAc;IAAAmC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX3Bf,EAAA,CAAAiB,cAAA,SAAI;QAAAjB,EAAA,CAAAkB,MAAA,YAAK;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACdnB,EAAA,CAAAiB,cAAA,cAAyB;QACvBjB,EAAA,CAAAoB,SAAA,eAKC;QAODpB,EAAA,CAAAiB,cAAA,gBAGG;QADDjB,EAAA,CAAAqB,UAAA,mBAAAC,gDAAA;UAAA,OAASN,GAAA,CAAA7B,SAAA,EAAW;QAAA,EAAC;QACpBa,EAAA,CAAAkB,MAAA,aACH;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAjBLnB,EAAA,CAAAuB,SAAA,GAAkB;QAAlBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAnC,IAAA,CAAkB;QAcpBmB,EAAA,CAAAuB,SAAA,GAAwB;QAAxBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAAnC,IAAA,CAAA4C,KAAA,CAAwB;;;;;;;SDJfnD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}