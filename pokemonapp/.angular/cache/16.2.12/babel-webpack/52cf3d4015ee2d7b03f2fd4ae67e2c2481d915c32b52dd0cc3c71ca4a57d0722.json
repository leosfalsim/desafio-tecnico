{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/register.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/card\";\nfunction RegisterComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The field shouldn't be empty! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Provide a valid e-mail! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The field shouldn't be empty! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" The min of characters is 3! \");\n    i0.ɵɵelementEnd();\n  }\n}\nclass RegisterComponent {\n  constructor($registerService, formBuilder, router) {\n    this.$registerService = $registerService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    const EMAILPATTERN = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.pattern(EMAILPATTERN)]],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  createLogin() {\n    let login = {\n      email: this.form.value.email,\n      password: this.form.value.password\n    };\n    this.$registerService.createLogin(login).subscribe(response => {\n      this.form.reset();\n      alert('WOWWW! Login Created!');\n      this.router.navigate(['/home']);\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegisterService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 17,\n    vars: 6,\n    consts: [[1, \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\", \"mt-10\"], [1, \"text-center\", \"text-2xl\", \"font-bold\", \"text-gray-900\"], [1, \"mt-5\", \"sm:mx-auto\", \"sm:w-full\", \"sm:max-w-sm\"], [3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"E-mail\", \"id\", \"email\", \"formControlName\", \"email\", \"type\", \"text\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"placeholder\", \"Password\", \"id\", \"password\", \"formControlName\", \"password\", \"type\", \"password\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \" Register \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"mat-card\")(5, \"mat-card-content\")(6, \"form\", 3)(7, \"mat-form-field\");\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, RegisterComponent_mat_error_9_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(10, RegisterComponent_mat_error_10_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\");\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵtemplate(13, RegisterComponent_mat_error_13_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵtemplate(14, RegisterComponent_mat_error_14_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_15_listener() {\n          return ctx.createLogin();\n        });\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.dirty) && ((tmp_1_0 = ctx.form.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.dirty) && ((tmp_2_0 = ctx.form.get(\"email\")) == null ? null : tmp_2_0.hasError(\"pattern\")));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.dirty) && ((tmp_3_0 = ctx.form.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.dirty) && ((tmp_4_0 = ctx.form.get(\"password\")) == null ? null : tmp_4_0.hasError(\"minlength\")));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i5.MatButton, i6.MatFormField, i6.MatError, i7.MatInput, i8.MatCard, i8.MatCardContent],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { RegisterComponent };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegisterComponent","constructor","$registerService","formBuilder","router","ngOnInit","createForm","EMAILPATTERN","form","group","email","required","pattern","password","minLength","createLogin","login","value","subscribe","response","reset","alert","navigate","_","ɵɵdirectiveInject","i1","RegisterService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","RegisterComponent_mat_error_9_Template","RegisterComponent_mat_error_10_Template","RegisterComponent_mat_error_13_Template","RegisterComponent_mat_error_14_Template","ɵɵlistener","RegisterComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","tmp_1_0","get","dirty","hasError","tmp_2_0","tmp_3_0","tmp_4_0","valid"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\register\\register.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RegisterService } from './service/register.service';\r\nimport { Ilogin } from 'src/app/interfaces/Ilogin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public form!: FormGroup;\r\n\r\n  constructor(\r\n    private $registerService: RegisterService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    const EMAILPATTERN: RegExp = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n\r\n    this.form = this.formBuilder.group({\r\n      email: ['', [Validators.required, Validators.pattern(EMAILPATTERN)]],\r\n      password: ['', [Validators.required, Validators.minLength(3)]]\r\n    });\r\n  }\r\n\r\n  createLogin() {\r\n    let login: Ilogin = {\r\n      email: this.form.value.email,\r\n      password:this.form.value.password\r\n    };\r\n\r\n    this.$registerService.createLogin(login).subscribe((response: Ilogin) => {\r\n      this.form.reset();\r\n      alert('WOWWW! Login Created!');\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n}\r\n","\r\n<div class=\"sm:mx-auto sm:w-full sm:max-w-sm mt-10\">\r\n  <h2 class=\"text-center text-2xl font-bold text-gray-900\">\r\n    Register\r\n  </h2>\r\n</div>\r\n\r\n<div class=\"mt-5 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n  <mat-card>\r\n    <mat-card-content>\r\n      <form [formGroup]=\"form\">\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"E-mail\" id=\"email\" formControlName=\"email\" type=\"text\">\r\n          <mat-error\r\n            *ngIf=\"(form.get('email')?.dirty)\r\n            && form.get('email')?.hasError('required')\">\r\n            The field shouldn't be empty!\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"(form.get('email')?.dirty)\r\n            && form.get('email')?.hasError('pattern')\">\r\n            Provide a valid e-mail!\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n          <input matInput type=\"password\" placeholder=\"Password\" id=\"password\" formControlName=\"password\" type=\"password\">\r\n          <mat-error\r\n            *ngIf=\"(form.get('password')?.dirty)\r\n            && form.get('password')?.hasError('required')\">\r\n            The field shouldn't be empty!\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"(form.get('password')?.dirty)\r\n            && form.get('password')?.hasError('minlength')\">\r\n            The min of characters is 3!\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <button\r\n          mat-raised-button\r\n          color=\"primary\"\r\n          [disabled]=\"!form.valid\"\r\n          (click)=\"createLogin()\"\r\n          >Login</button>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}