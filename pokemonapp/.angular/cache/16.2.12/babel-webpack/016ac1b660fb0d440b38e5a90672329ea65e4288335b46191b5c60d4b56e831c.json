{"ast":null,"code":"import { Ilogin } from 'src/app/interfaces/Ilogin';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/register.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nclass RegisterComponent {\n  constructor($registerService, formBuilder, router) {\n    this.$registerService = $registerService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n  createForm() {\n    this.form = this.formBuilder.group({\n      email: ['', Validators.compose([Validators.required])],\n      password: ['', Validators.compose([Validators.required])]\n    });\n  }\n  createLogin() {\n    let login = new Ilogin(this.form.value.email, this.form.value.password);\n    this.$registerService.createLogin(login).subscribe(response => {\n      this.form.reset();\n      alert('WOWWW! Login Created!');\n      this.router.navigate(['/home']);\n    });\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.RegisterService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite o e-mail\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Digite o password\"], [3, \"disabled\", \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵelement(3, \"input\", 1)(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_5_listener() {\n          return ctx.createLogin();\n        });\n        i0.ɵɵtext(6, \"Register \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0Esb0tBQW9LIiwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}\nexport { RegisterComponent };","map":{"version":3,"names":["Ilogin","Validators","RegisterComponent","constructor","$registerService","formBuilder","router","ngOnInit","createForm","form","group","email","compose","required","password","createLogin","login","value","subscribe","response","reset","alert","navigate","_","i0","ɵɵdirectiveInject","i1","RegisterService","i2","FormBuilder","i3","Router","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","RegisterComponent_Template_button_click_5_listener","ɵɵadvance","ɵɵproperty","valid"],"sources":["E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\register\\register.component.ts","E:\\Arquivos de Programas\\SoftwareFactory\\desafio-tecnico\\pokemonapp\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { RegisterService } from './service/register.service';\r\nimport { Ilogin } from 'src/app/interfaces/Ilogin';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public form!: FormGroup;\r\n\r\n  constructor(\r\n    private $registerService: RegisterService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      email: ['', Validators.compose([Validators.required])],\r\n      password: ['', Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  createLogin() {\r\n    let login = new Ilogin(this.form.value.email, this.form.value.password);\r\n    this.$registerService.createLogin(login).subscribe((response: Ilogin) => {\r\n      this.form.reset();\r\n      alert('WOWWW! Login Created!');\r\n      this.router.navigate(['/home']);\r\n    });\r\n  }\r\n}\r\n","\r\n<h1>Register</h1>\r\n<form [formGroup]=\"form\">\r\n  <input\r\n    type=\"text\"\r\n    id=\"email\"\r\n    formControlName=\"email\"\r\n    placeholder=\"Digite o e-mail\"\r\n  >\r\n  <input\r\n    type=\"password\"\r\n    id=\"password\"\r\n    formControlName=\"password\"\r\n    placeholder=\"Digite o password\"\r\n  >\r\n  <button\r\n    [disabled]=\"!form.valid\"\r\n    (click)=\"createLogin()\"\r\n    >Register\r\n  </button>\r\n</form>\r\n"],"mappings":"AAGA,SAASA,MAAM,QAAQ,2BAA2B;AAClD,SAAiCC,UAAU,QAAQ,gBAAgB;;;;;AAGnE,MAKaC,iBAAiB;EAI5BC,YACUC,gBAAiC,EACjCC,WAAwB,EACxBC,MAAc;IAFd,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAUA,CAAA;IACR,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC,CAAC;MACtDC,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACW,OAAO,CAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;KACzD,CAAC;EACJ;EAEAE,WAAWA,CAAA;IACT,IAAIC,KAAK,GAAG,IAAIhB,MAAM,CAAC,IAAI,CAACS,IAAI,CAACQ,KAAK,CAACN,KAAK,EAAE,IAAI,CAACF,IAAI,CAACQ,KAAK,CAACH,QAAQ,CAAC;IACvE,IAAI,CAACV,gBAAgB,CAACW,WAAW,CAACC,KAAK,CAAC,CAACE,SAAS,CAAEC,QAAgB,IAAI;MACtE,IAAI,CAACV,IAAI,CAACW,KAAK,EAAE;MACjBC,KAAK,CAAC,uBAAuB,CAAC;MAC9B,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBA5BUrB,iBAAiB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAjB9B,iBAAiB;IAAA+B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX9Bf,EAAA,CAAAiB,cAAA,SAAI;QAAAjB,EAAA,CAAAkB,MAAA,eAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAK;QACjBnB,EAAA,CAAAiB,cAAA,cAAyB;QACvBjB,EAAA,CAAAoB,SAAA,eAKC;QAODpB,EAAA,CAAAiB,cAAA,gBAGG;QADDjB,EAAA,CAAAqB,UAAA,mBAAAC,mDAAA;UAAA,OAASN,GAAA,CAAAzB,WAAA,EAAa;QAAA,EAAC;QACtBS,EAAA,CAAAkB,MAAA,gBACH;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;;;QAjBLnB,EAAA,CAAAuB,SAAA,GAAkB;QAAlBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAA/B,IAAA,CAAkB;QAcpBe,EAAA,CAAAuB,SAAA,GAAwB;QAAxBvB,EAAA,CAAAwB,UAAA,cAAAR,GAAA,CAAA/B,IAAA,CAAAwC,KAAA,CAAwB;;;;;;;SDJf/C,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}